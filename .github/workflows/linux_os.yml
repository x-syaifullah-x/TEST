name: LINUX_OS

on:
  push:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Linux version
        run: |
          cat /etc/os-release

      - name: Linux CPU
        run: |
          cat /proc/cpuinfo

      - name: Linux memory
        run: |
          free -mw
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      
      - name: Install kvm
        run: |
          echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager emulator
          $ANDROID_HOME/emulator/emulator -accel-check
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-30;google_apis;x86_64"
          cat << EOF >> ~/.android/advancedFeatures.ini
          Vulkan = off
          GLDirectMem = on
          EOF
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d "17"
          echo y | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager platform-tools
          sudo apt-get install libpulse0 -y
          $ANDROID_HOME/emulator/emulator -avd test -no-metrics -noaudio -gpu swiftshader_indirect -no-window &
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          adb wait-for-device

          A=$(adb shell getprop sys.boot_completed | tr -d '\r')

          while [ "$A" != "1" ]; do
            sleep 2
            A=$(adb shell getprop sys.boot_completed | tr -d '\r')
          done

          adb shell input keyevent 82
          adb shell free -m
          
  # setup_java:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Setup JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "21"
  #         distribution: "oracle"
          # cache: gradle

      # - name: Setup android studio
      #   run: |
      #     wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.2.1.10/android-studio-2024.2.1.10-linux.tar.gz 2>/dev/null
      #     tar xzf android-studio-2024.2.1.10-linux.tar.gz -C ${{ github.workspace }}
      #     ls -la ${{ github.workspace }}

      # - name: Setup java
      #   run: |
      #     wget https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-17.0.7-linux-x64-b1000.6.tar.gz 2>/dev/null
      #     [ ! -d $JAVA_HOME ] && mkdir -p $JAVA_HOME
      #     tar xzf jbr_jcef-17.0.7-linux-x64-b1000.6.tar.gz && rm -rf jbr_jcef-17.0.7-linux-x64-b1000.6.tar.gz
      #     mv jbr_jcef-17.0.7-linux-x64-b1000.6/* $JAVA_HOME
      #     echo $JAVA_HOME/bin >> $GITHUB_PATH

      # - name: Setup flutter SDK
      #   run: |
      #     wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.10.6-stable.tar.xz 2>/dev/null
      #     [ ! -d $FLUTTER_ROOT ] && mkdir -p $FLUTTER_ROOT
      #     tar xf flutter_linux_3.10.6-stable.tar.xz && rm -rf flutter_linux_3.10.6-stable.tar.xz
      #     echo $FLUTTER_ROOT/bin >> $GITHUB_PATH
